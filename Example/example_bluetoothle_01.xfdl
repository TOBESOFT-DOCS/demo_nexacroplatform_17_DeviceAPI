<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="example_bluetoothle_01" width="480" height="768" titletext="New Form" onload="example_bluetoothle_01_onload" onbeforeclose="example_bluetoothle_01_onbeforeclose">
    <Layouts>
      <Layout height="768" mobileorientation="portrait" screenid="Screen_M_S_Android,Screen_M_S_iOS" width="480">
        <Button id="btn_ble" taborder="0" text="BluetoothLE" left="0" top="0" height="60" textAlign="left" borderRadius="0px" padding="0px 0px 0px 10px" width="100.00%" onclick="btn_ble_onclick" font="normal bold 16pt/normal &quot;Arial&quot;" background="lightgray" iconPosition="right"/>
        <ImageViewer id="img_ble_status" taborder="1" top="6" height="48" image="URL(&quot;imagerc::ico_bluetooth-disabled-button_128_black.png&quot;)" background="transparent" stretch="fixaspectratio" border="0px" padding="5px" width="48" right="5" onclick="img_ble_status_onclick"/>
        <Grid id="Grid00" taborder="2" left="0" width="100%" height="688" top="btn_ble:0" binddataset="ds_address" autosizingtype="col" oncellclick="Grid00_oncellclick" autofittype="col">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="20"/>
                <Column size="160"/>
                <Column size="160"/>
                <Column size="100"/>
              </Columns>
              <Rows>
                <Row size="60"/>
              </Rows>
              <Band id="body">
                <Cell colspan="4">
                  <Cell/>
                  <Cell col="1" text="bind:DeviceName" textAlign="left"/>
                  <Cell col="2" text="bind:DeviceAddress" textAlign="left"/>
                  <Cell col="3" text="bind:StatusMessage" textAlign="left"/>
                </Cell>
              </Band>
            </Format>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Objects>
      <BluetoothLE id="BluetoothLE00" onsuccess="BluetoothLE00_onsuccess" onerror="BluetoothLE00_onerror" onscanresult="BluetoothLE00_onscanresult"/>
      <Dataset id="ds_address">
        <ColumnInfo>
          <Column id="DeviceName" type="STRING" size="256"/>
          <Column id="DeviceAddress" type="STRING" size="256"/>
          <Column id="StatusMessage" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.resetStatusMsg = function()
{
	nRowCnt = this.ds_address.getCount();
	
	for(var i=0; i<nRowCnt; i++)
	{
		this.ds_address.setColumn(i, "StatusMessage", "");
	}
};

this.example_bluetoothle_01_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.BluetoothLE00.scanStart(10000);
};

this.example_bluetoothle_01_onbeforeclose = function(obj:nexacro.Form,e:nexacro.CloseEventInfo)
{
	this.BluetoothLE00.disconnect();
};

this.BluetoothLE00_onsuccess = function(obj:nexacro.BluetoothLE,e:nexacro.BluetoothLEEventInfo)
{	
	switch(e.reason)
	{
		case 10:	//scanStart() scan start
			this.img_ble_status.set_image("imagerc::ico_bluetooth-signal-indicator_128_blue.png");
			break;
		
		case 11:	//scanStart() scan timeout"
			this.img_ble_status.set_image("imagerc::ico_blueetooth-logo_128_blue.png");
			break;
			
		case 12:	//scanStart() discovered for a device that provides specific service
			break;		
		
		case 20:	//scanStop() scan stop
			this.img_ble_status.set_image("imagerc::ico_blueetooth-logo_128_blue.png");			
			break;
		
		case 30:	//connect() connected
			this.img_ble_status.set_image("imagerc::ico_bluetooth-connected_128_blue.png");			
			this.ds_address.setColumn(this.ds_address.rowposition, "StatusMessage", "Connected");
			break;
		
		case 40:	//disconnect() disconnected
			this.img_ble_status.set_image("imagerc::ico_blueetooth-logo_128_blue.png");
			this.resetStatusMsg();
			break;
		
		case 50:	//discoverService() discover service Start		
		case 51:	//discoverService() service discovered	
		case 60:	//subscribe() Subscribe, Notification Start		
		case 61:	//subscribe() Subscribe, Notification message received	
		case 70:	//unsubscribe() Unsubscribe, Notification Stop		
		case 80:	//readCharacteristic() Read Characteristics
		case 90:	//writeCharacteristic() Write Characteristics			
		default:
			break;
	}

};

this.BluetoothLE00_onerror = function(obj:nexacro.BluetoothLE,e:nexacro.BluetoothLEErrorEventInfo)
{
	var strResult = "["+ e.eventid +"] "+ e.reason +":"+ e.errormsg;
	alert(strResult);
};

this.BluetoothLE00_onscanresult = function(obj:nexacro.BluetoothLE,e:nexacro.BluetoothLEScanDeviceEventInfo)
{
	var row = this.ds_address.addRow();
	
	this.ds_address.setColumn(row, "DeviceName", e.device_name);
	this.ds_address.setColumn(row, "DeviceAddress", e.device_address);	
};

this.Grid00_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var rowPos = this.ds_address.rowposition;		
	var strStatus = this.ds_address.getColumn(rowPos, "StatusMessage");
	
	if(strStatus == "Connected")
	{
		this.BluetoothLE00.disconnect();
		return;
	}
	else
	{	
		this.BluetoothLE00.disconnect();
		
		this.ds_address.setColumn(rowPos, "StatusMessage", "Connecting");	
		var strAddr = this.ds_address.getColumn(rowPos, "DeviceAddress");
		this.BluetoothLE00.connect(strAddr);
	}
};


this.btn_ble_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.BluetoothLE00.disconnect();
};

this.img_ble_status_onclick = function(obj:nexacro.ImageViewer,e:nexacro.ClickEventInfo)
{
	this.btn_ble_onclick();
};
]]></Script>
  </Form>
</FDL>
