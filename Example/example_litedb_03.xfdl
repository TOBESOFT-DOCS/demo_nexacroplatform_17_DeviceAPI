<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="sample_litedb_03" width="480" height="768" titletext="New Form" onclose="sample_litedb_03_onclose" onload="sample_litedb_03_onload">
    <Layouts>
      <Layout height="768" mobileorientation="portrait" screenid="Screen_M_S_Android,Screen_M_S_iOS" width="480">
        <GroupBox id="GroupBox02" taborder="8" text="Transaction" left="10" top="300" width="460" height="110"/>
        <GroupBox id="GroupBox01" taborder="4" text="Query" left="10" top="120" width="460" height="170"/>
        <GroupBox id="GroupBox00" taborder="3" text="Database" left="10" top="10" width="460" height="100"/>
        <Grid id="Grid00" taborder="0" left="10" top="430" width="460" height="330" binddataset="ds_sqlite" autofittype="col" oncellclick="Grid00_oncellclick">
          <Formats>
            <Format id="default"/>
          </Formats>
        </Grid>
        <Edit id="edt_dbfile" taborder="1" left="20" top="50" width="440" height="40" value="%USERAPP%File/nexacro_sample_db.sqlite" text="%USERAPP%File/nexacro_sample_db.sqlite" enable="false" font="normal 14pt/normal &quot;Arial&quot;"/>
        <Button id="btn_query" taborder="2" text="Query" left="360" top="235" width="100" height="40" enable="false" onclick="btn_query_onclick"/>
        <Button id="btn_begin" taborder="5" text="Begin" left="80" top="355" width="120" height="40" onclick="btn_begin_onclick" enable="false"/>
        <Button id="btn_commit" taborder="6" text="Commit" left="210" top="355" width="120" height="40" onclick="btn_commit_onclick" enable="false"/>
        <Button id="btn_rollback" taborder="7" text="Rollback" left="340" top="355" width="120" height="40" onclick="btn_rollback_onclick" enable="false"/>
        <Static id="stt_transaction" taborder="9" text="The transaction has been set." left="230" top="310" width="230" height="40" font="normal 700 12pt/normal &quot;Arial&quot;" color="red" visible="false"/>
        <ExtCombo id="ExtCombo00" taborder="10" left="20" top="165" width="440" height="60" combotitle="title" index="0" codecolumn="codecolumn" datacolumn="datacolumn" innerdataset="innerdataset" text="보화소합원" value="01">
          <Dataset id="innerdataset">
            <ColumnInfo>
              <Column id="codecolumn" size="256"/>
              <Column id="datacolumn" size="256"/>
            </ColumnInfo>
            <Rows>
              <Row>
                <Col id="codecolumn">01</Col>
                <Col id="datacolumn">insert into tb_pos values('08', 'Intern')</Col>
              </Row>
              <Row>
                <Col id="codecolumn">02</Col>
                <Col id="datacolumn">delete from tb_pos where pos_name='Intern'</Col>
              </Row>
              <Row>
                <Col id="codecolumn">03</Col>
                <Col id="datacolumn">update tb_pos set pos_name='Staff' where pos_name='Intern'</Col>
              </Row>
            </Rows>
          </Dataset>
        </ExtCombo>
      </Layout>
    </Layouts>
    <Objects>
      <LiteDBConnection id="LiteDBConnection00" onsuccess="LiteDBConnection00_onsuccess" onerror="LiteDBConnection00_onerror"/>
      <LiteDBStatement id="LiteDBStatement00" onsuccess="LiteDBStatement00_onsuccess" onerror="LiteDBStatement00_onerror"/>
      <Dataset id="ds_sqlite"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.sample_litedb_03_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.LiteDBConnection00.isConnected();
};

this.btn_begin_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.LiteDBConnection00.begin();	
};

this.btn_commit_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.LiteDBConnection00.commit();	
};

this.btn_rollback_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.LiteDBConnection00.rollback();	
};

this.LiteDBConnection00_onsuccess = function(obj:nexacro.LiteDBConnection,e:nexacro.LiteDBEventInfo)
{
	switch(e.reason)
	{
		case 1:	// LiteDBConnection begin()
			this.btn_begin.set_enable(false);
			this.btn_commit.set_enable(true);
			this.btn_rollback.set_enable(true);
			this.stt_transaction.set_visible(true);
			alert("Transaction setup succeeded.");			
			break;
			
		case 2:	// LiteDBConnection close()
			this.Grid00.set_visible(false);
			this.btn_query.set_enable(false);
			this.btn_begin.set_enable(false);
			this.btn_commit.set_enable(false);
			this.btn_rollback.set_enable(false);
			this.stt_transaction.set_visible(false);
			break;
			
		case 3: // LiteDBConnection commit()
			this.btn_commit.set_enable(false);
			this.btn_rollback.set_enable(false);		
			this.stt_transaction.set_visible(false);
			this.btn_begin.set_enable(true);
			alert("Commit succeeded.");			
			this.LiteDBStatement00.executeQuery("select * from tb_pos");
			break;
			
		case 4: // LiteDBConnection isConnected()
			alert("Already connected to DB.");
			break;
			
		case 5: // LiteDBConnection open()
			this.Grid00.set_visible(true);
			this.btn_query.set_enable(true);
			this.btn_begin.set_enable(true);

			this.LiteDBStatement00.set_ldbconnection(this.LiteDBConnection00);
			this.LiteDBStatement00.executeQuery("select * from tb_pos");
			break;
			
		case 6:	// LiteDBConnection rollback()
			this.btn_commit.set_enable(false);
			this.btn_rollback.set_enable(false);		
			this.stt_transaction.set_visible(false);
			this.btn_begin.set_enable(true);
			alert("Rollback succeeded.");		
			this.LiteDBStatement00.executeQuery("select * from tb_pos");
			break;
			
		default:
			break;
	}

};

this.LiteDBConnection00_onerror = function(obj:nexacro.LiteDBConnection,e:nexacro.LiteDBErrorEventInfo)
{	
	switch(e.statuscode.toString())
	{
		case "1201":	//DB response timeout error
			alert("DB response timeout.");
			break;
			
		case "1202":	//LiteDBConnection begin() error
			alert("Transaction setup failed.");
			break;
			
		case "1203":	//LiteDBConnection close() error
			alert("DB close failed.");
			break;
			
		case "1204":	//LiteDBConnection commit() error
			alert("Commit failed.");
			break;
			
		case "1205":	//LiteDBConnection isConnected() error
			this.LiteDBConnection00.set_datasource(this.edt_dbfile.value);
			this.LiteDBConnection00.open();				
			break;
			
		case "1206":	//LiteDBConnection open() error
			alert("DB open failed.");
			break;
			
		case "1207":	//LiteDBConnection rollback() error
			alert("Rollback failed.");
			break;
			
		case "00001":	//Parameter setting error
			alert("Parameter setting error.");
			break;
			
		default:		//Unknown error		
			var strResult = "[LiteDBConnection00_onerror]";	
			strResult += "\n["+ e.errortype +" "+ e.statuscode +"] "+ e.errormsg;
			strResult += "\ne.ldberrorcode: "+ e.ldberrorcode;
			strResult += "\ne.ldberrormsg: "+ e.ldberrormsg;			
			alert(strResult);				
	}
	
};

this.btn_query_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	this.execute_query(this.ExtCombo00.text);
};

this.execute_query = function(strQuery)
{
	this.LiteDBStatement00.set_query(strQuery);
	var arrString = this.LiteDBStatement00.query.split(" ");	
	
	switch(arrString[0])
	{
		case "select":
			this.LiteDBStatement00.executeQuery();
			break;
			
		case "insert":
		case "update":
		case "delete":
			this.LiteDBStatement00.executeUpdate();
			break;
			
		default:
			alert(arrString[0] + " is illegal query statement.");
	}
}

this.LiteDBStatement00_onsuccess = function(obj:nexacro.LiteDBStatement,e:nexacro.LiteDBEventInfo)
{	
	switch(e.reason)
	{
		case 7:	// LiteDBStatement executeQuery()
			this.ds_sqlite.copyData(e.returnvalue);
			this.ds_sqlite.set_keystring("S:+POS_CD+POS_NAME");
			this.Grid00.createFormat();		
			break;
			
		case 8:	// LiteDBStatement executeUpdate()
			this.LiteDBStatement00.executeQuery("select * from tb_pos");
			break;
			
		case 9:	// LiteDBStatement close()
			alert("Query execution stopped.");
			break;
			
		default:
			break;
	}	
};

this.LiteDBStatement00_onerror = function(obj:nexacro.LiteDBStatement,e:nexacro.LiteDBErrorEventInfo)
{
	switch(e.statuscode.toString())
	{
		case "1210":	//LiteDBStatement executeQuery() error
			alert("LiteDBStatement executeQuery() error.");
			break;
			
		case "1211":	//LiteDBStatement executeUpdate() error
			alert("LiteDBStatement executeUpdate() error.");
			break;
			
		case "00001":	//Parameter setting error
			alert("LiteDBStatement parameter setting error.");
			break;
			
		default:		//Unknown error		
			var strResult = "[LiteDBStatement00_onerror]";	
			strResult += "\n["+ e.errortype +" "+ e.statuscode +"] "+ e.errormsg;
			strResult += "\ne.ldberrorcode: "+ e.ldberrorcode;
			strResult += "\ne.ldberrormsg: "+ e.ldberrormsg;			
			alert(strResult);
	}
};

/*
this.edt_query_onkeydown = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if(e.keycode == "13")	//Enter key
	{			
		var strQuery;
		
		switch(e.fromobject.id)
		{
			case "edt_query":
				strQuery = this.edt_query.value;				
				if(nexacro._isNull(strQuery) || strQuery == "")
				{
					this.edt_query.setFocus();
				}
				else
				{
					this.btn_query.setFocus();
					this.btn_query_onclick();
				}					
				break;
				
			case "edt_query2":
				strQuery = this.edt_query2.value;
				if(nexacro._isNull(strQuery) || strQuery == "")
				{
					this.edt_query2.setFocus();
				}
				else
				{
					this.btn_query2.setFocus();
					this.btn_query2_onclick();
				}					
				break;
				
			default:
				trace("Illegal onkeydown event");
		}
	}	
};
*/]]></Script>
  </Form>
</FDL>
