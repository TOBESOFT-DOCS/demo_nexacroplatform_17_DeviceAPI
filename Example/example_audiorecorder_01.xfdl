<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="example_audiorecorder_01" width="480" height="768" titletext="New Form" ontimer="example_audiorecorder_01_ontimer" onload="example_audiorecorder_01_onload" onbeforeclose="example_audiorecorder_01_onbeforeclose">
    <Layouts>
      <Layout height="768" mobileorientation="portrait" screenid="Screen_M_S_Android,Screen_M_S_iOS" width="480">
        <GroupBox id="GroupBox00" taborder="0" text="AudioRecorder" left="10" top="20" width="460" height="250" font="normal 18pt/normal &quot;Arial&quot;"/>
        <Button id="btn_record" taborder="1" text="Record" left="200" top="210" width="120" height="40" font="normal 18pt/normal &quot;Arial&quot;" onclick="btn_record_onclick"/>
        <Static id="stt_filepath_title" taborder="2" text="File Path" left="30" top="60" width="120" height="40" font="normal 14pt/normal &quot;Arial&quot;"/>
        <Static id="stt_filepath" taborder="3" left="30" top="100" width="420" height="40" font="normal 12pt/normal &quot;Arial&quot;" wordWrap="char" background="lightgray" padding="0px 5px"/>
        <Button id="btn_stop" taborder="4" text="Stop" left="330" top="210" width="120" height="40" font="normal 18pt/normal &quot;Arial&quot;" onclick="btn_stop_onclick" enable="false"/>
        <Static id="stt_time" taborder="5" left="30" top="150" width="420" height="40" font="normal 12pt/normal &quot;Arial&quot;" wordWrap="char" background="lightgray" padding="0px 5px" textAlign="center"/>
        <Grid id="grd_filelist" taborder="6" left="10" width="460" height="460" top="290" binddataset="ds_filelist" autosizingtype="col" oncellclick="grd_filelist_oncellclick" autofittype="col" oncelldblclick="grd_filelist_oncelldblclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="60"/>
              </Rows>
              <Band id="body">
                <Cell text="bind:FileName" textAlign="left" wordWrap="char" padding="0px 0px 0px 5px"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_pause" taborder="7" text="Pause" left="200" top="210" width="120" height="40" font="normal 18pt/normal &quot;Arial&quot;" visible="false" onclick="btn_pause_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[eStatus = {
	RECORD: 0,
	STOP: 1,
	PAUSE: 2,
};
var eRecordStatus = eStatus;

//for timer
var tMin=0, tSec=0, tMSec=0;
var keepgoing=false; 

var DIRECTORY = "%USERAPP%File/";
var FILE_NAME = "Rec";
var FILE_COUNT = 0;


var strOS = nexacro.System.osversion;
	
if(!strOS.toLowerCase().search(/android/))
{
	strOS = "ANDROID";
}
else if(!strOS.toLowerCase().search(/ios/))
{
	strOS = "IOS";
}


this.timer = function(keepgoing)
{ 
	if(keepgoing)
	{ 
		tMSec += 1;
		
		if (tMSec == 100)
		{
			tMSec = 0;
			tSec += 1;
		}
		
		if (tSec == 60)
		{
			tSec = 0;
			tMin += 1;
		} 
	   
		strSec = ""+ tSec;         
		strMin = ""+ tMin;         
		strMSec = ""+ tMSec; 
	  
		if (strSec.length != 2)
		{ 
			strSec = "0"+ tSec; 
		} 
		if (strMin.length != 2)
		{ 
			strMin = "0"+ tMin; 
		} 
		if (strMSec.length != 2)
		{ 
			strMSec = "0"+ tMSec; 
		} 	
		
		this.stt_time.set_text(strMin +":"+ strSec +":"+ strMSec);
	}
}

this.initVar = function()
{
	tMin=0;
	tSec=0;
	tMSec=0;
	keepgoing=false;
	
	this.stt_time.set_text("00:00:00");
	
	this.killTimer(0);
}

this.changeStatus = function(status)
{
	switch(status)
	{
		case eStatus.RECORD:
			eRecordStatus = eStatus.RECORD;
			
			if (strOS == "IOS")
			{
				this.btn_record.set_visible(false);
				this.btn_pause.set_visible(true);				
			}
			else
			{
				this.btn_record.set_enable(false);			
			}
			this.btn_stop.set_enable(true);			
			break;
			
		case eStatus.PAUSE:
			eRecordStatus = eStatus.PAUSE;
			this.btn_record.set_visible(false);
			this.btn_pause.set_visible(true);
			this.btn_stop.set_enable(true);
			break;
			
		case eStatus.STOP:
			eRecordStatus = eStatus.STOP;

			if (strOS == "IOS")
			{
				this.btn_record.set_visible(true);
				this.btn_pause.set_visible(false);			
			}
			else
			{
				this.btn_record.set_enable(true);			
			}
			this.btn_stop.set_enable(false);			
			break;
	}

}

this.example_audiorecorder_01_ontimer = function(obj:nexacro.Form,e:nexacro.TimerEventInfo)
{
	if(e.timerid == 0)
	{
		this.timer(true);
	}
};

this.example_audiorecorder_01_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.VirtualFile00.getFileList(DIRECTORY, ".mp3", VirtualFile.findFileOnly);
};

this.example_audiorecorder_01_onbeforeclose = function(obj:nexacro.Form,e:nexacro.CloseEventInfo)
{
	for(var i=0; i<FILE_COUNT; i++)
	{
		this.VirtualFile00.remove(DIRECTORY + FILE_NAME + i +".mp3");
	}
	
	this.VirtualFile00.getFileList(DIRECTORY, ".mp3", VirtualFile.findFileOnly);
};

this.btn_record_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.stt_filepath.set_text(DIRECTORY + FILE_NAME + FILE_COUNT);
	
	this.AudioRecorder00.set_audiofile(this.stt_filepath.text);

	if(this.AudioRecorder00.recordingStart(1000))
	{
		this.setTimer(0, 10);
		this.changeStatus(eStatus.RECORD);
	}
};

this.btn_pause_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.AudioRecorder00.pause();	
	this.changeStatus(eStatus.PAUSE);
};

this.btn_stop_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.AudioRecorder00.recordingStop();	
	this.changeStatus(eStatus.STOP);
	
	this.killTimer(0);
};


this.AudioRecorder00_onerror = function(obj:nexacro.AudioRecorder,e:nexacro.AudioErrorEventInfo)
{
	var strResult = "\n- AudioRecorder00_onerror"
	+"\n["+ e.errortype +"] "+ e.statuscode +" "+ e.errormsg;

	alert(strResult);
	
	switch(e.statuscode)
	{
		case "1301":	//already recording
			break;
		case "1006":	//play selection error (startpos >= stoppos)
		case "1007":	//not loaded
		case "1009":	//can't resume
		case "1302":	//not recording
			this.initVar();		
			break;
		case "1306":	//exist file
			FILE_COUNT++;
			this.btn_record_onclick();
			break;
		default:
			break;	
	}
};

this.AudioRecorder00_onstop = function(obj:nexacro.AudioRecorder,e:nexacro.AudioEventInfo)
{
	this.initVar();

	switch(e.reason)
	{
		case 4: //End of record
		case 5: //STOP
			var strFileName = FILE_NAME + FILE_COUNT + ".mp3";
			var row = this.ds_filelist.addRow();	
			var ret = this.ds_filelist.setColumn(row, "FileName", strFileName);			
			FILE_COUNT++;
			break;
			
		case 6:	//PAUSE
			break;
	}
};

this.AudioRecorder00_onrecording = function(obj:nexacro.AudioRecorder,e:nexacro.AudioEventInfo)
{

};

this.VirtualFile00_onsuccess = function(obj:nexacro.VirtualFile,e:nexacro.VirtualFileEventInfo)
{
	switch(e.reason)
	{
		case 8:		//getFileList		
			this.ds_filelist.clearData();
			
			for(var i=0; i<e.fileattributelist.length; i++)
			{		
				if(e.fileattributelist[i].filename.indexOf(FILE_NAME) > -1)
				{
					trace("e.fileattributelist["+ i +"] = "+ e.fileattributelist[i].filename);
					
					row = this.ds_filelist.addRow();	
					this.ds_filelist.setColumn(row, "FileName", e.fileattributelist[i].filename);
					
					FILE_COUNT++;
				}
			}
			break;
	}
};

this.VirtualFile00_onerror = function(obj:nexacro.VirtualFile,e:nexacro.VirtualFileErrorEventInfo)
{
	var strResult = "\n- VirtualFile00_onerror"
	+"\n["+ e.errortype +"] "+ e.statuscode +" "+ e.errormsg;
	
	alert(strResult);	
};
]]></Script>
    <Objects>
      <AudioRecorder id="AudioRecorder00" onstop="AudioRecorder00_onstop" onerror="AudioRecorder00_onerror" onrecording="AudioRecorder00_onrecording"/>
      <VirtualFile id="VirtualFile00" onsuccess="VirtualFile00_onsuccess" onerror="VirtualFile00_onerror"/>
      <Dataset id="ds_filelist">
        <ColumnInfo>
          <Column id="FileName" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
