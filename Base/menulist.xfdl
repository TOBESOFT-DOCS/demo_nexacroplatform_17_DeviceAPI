<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="menulist" width="320" height="768" titletext="New Form" onload="menu_onload" ontimer="menu_ontimer">
    <Layouts>
      <Layout height="768" mobileorientation="portrait" screenid="Screen_M_S_Android,Screen_M_S_iOS" width="320"/>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[var g_varAppInfo = nexacro.getApplication();

var interval_count, target_group, decrease, increase, interval_id=0, interval_count = 0;
var item_width = "100%", item_height = 60;
//var _expanded_group, _group_count;

this.item_expand = function(obj, e)
{
	trace(obj.id);
	
	target_group = obj.parent.parent;
	
	expanded_group = this._expanded_group;
	decrease = expanded_group ? expanded_group._item_count*item_height / 10 : 0;
	increase = target_group._item_count*item_height / 10;
	this.setTimer(interval_id, 10);	

};

this.item_click = function(obj, e)
{
	trace(obj.id);
	
	this.parent.parent.parent.parent.showExample(obj.id);
};

this.menu_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	var i, j, target_fn, menu_nm, menu_item, menu_group, group_count = 0, item_count = 0;
	var ds = g_varAppInfo.ds_example_list;
	var varBgColor, varFont, varMenuName, varItemCnt;
	
	for(i = 0, count = ds.getRowCount(); i < count; i++)
	{
		if(ds.getColumn(i, 'tree_level') < 1)
		{
			item_count = 0;
			menu_group = new Div();
			menu_group.init('group'+group_count, 0, item_height*group_count, item_width, item_height);			
					
			menu_group.form.set_scrolltype("none");
			menu_group.form.set_scrollbartype("none");
			
			menu_group._index = group_count++;
			this.addChild(menu_group.name, menu_group);
		}
		
		menu_item = new Button();
		menu_nm = ds.getColumn(i, 'subject');
		menu_item.init(menu_nm, 0, item_height*item_count, item_width, item_height);

		if(item_count == 0)
		{
			target_fn = this.item_expand;
			varBgColor = "#F2F2F2";
			varFont = "18pt Arial";
			
			varItemCnt = ds.getCaseCount("category =='"+ menu_nm +"'") - 1;
			varMenuName = " "+ menu_nm +" ["+ varItemCnt +"]";
		}
		else
		{
			target_fn = this.item_click;
			varBgColor = "#CEE4F9";
			varFont = "16pt Arial";
			varMenuName = " "+ menu_nm;
			
			menu_item.set_icon("imagerc::ico_twotone_keyboard_arrow_right_black_18dp.png");
			menu_item.set_iconPosition("left");
		}
		
		menu_item.set_background(varBgColor);
		menu_item.set_border("0px none");
		menu_item.set_color("#000000");
		menu_item.set_borderRadius("normal 0 0");
		menu_item.set_font(varFont);
		menu_item.set_wordWrap("english");
		menu_item.set_textAlign("left");
		menu_item.set_text(varMenuName);

		menu_item.addEventHandler("onclick", target_fn, this);
		menu_group._item_count = item_count++;
		menu_group.addChild(menu_item.name, menu_item);
				
	}
	
	for(j = 0; j < group_count; j++)
	{
		this['group'+j].show();
	}
	
	this._group_count = group_count;
	this._expanded_group = null;
	//this.div_main.form.scrollbartype("none");
	//this.set_scrollbars("none");

}

this.menu_ontimer = function(obj:nexacro.Form,e:nexacro.TimerEventInfo)
{
	var i, tmp_g, gap = 0, expanded_group = this._expanded_group;
	
	if(expanded_group == target_group)
	{
		expanded_group.set_height(expanded_group.height-decrease);
		
		for(i = expanded_group._index, gcount = this._group_count; i < gcount; i++)
		{
			gap = 0, tmp_g = this['group'+i];
			
			if(expanded_group && tmp_g._index > expanded_group._index)
			{
				gap -= decrease;
			}
			
			tmp_g.set_top(tmp_g.top + gap);
		}
	}
	else
	{
		expanded_group && expanded_group.set_height(expanded_group.height-decrease);
		
		for(i = 0, gcount = this._group_count; i < gcount; i++)
		{
			gap = 0, tmp_g = this['group'+i];
			
			if(expanded_group !== null)
			{
				if((expanded_group && tmp_g._index) > expanded_group._index)
				{
					gap -= decrease;
				}
			}
			
			if(tmp_g._index > target_group._index)
			{
				gap += increase;
			}
			
			tmp_g.set_top(tmp_g.top + gap);
		}
		
		//target_group.form.set_height(target_group.form.height+increase);			
		target_group.set_height(target_group.height+increase);			
	}
	
	if(++interval_count > 9)
	{		
		this.killTimer(interval_id);
		interval_count = 0;
		this._expanded_group = (expanded_group == target_group ? null : target_group);
	}
	
	this.resetScroll();
	
}]]></Script>
  </Form>
</FDL>
