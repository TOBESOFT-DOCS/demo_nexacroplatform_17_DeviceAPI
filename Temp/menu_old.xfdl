<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="menu" width="320" height="768" titletext="New Form" onload="menu_onload" ontimer="menu_ontimer" ontouchend="menu_ontouchend" ontouchstart="menu_ontouchstart" ontouchmove="menu_ontouchmove">
    <Layouts>
      <Layout height="768" mobileorientation="portrait" screenid="Screen_M_S_Android,Screen_M_S_iOS" width="320"/>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[var g_varAppInfo = nexacro.getApplication();

var strCategory = "";
var strSubject = "";
var strSampleFile = "";
var strDocID = "";


var posXTouchStart = 0, posYTouchStart = 0, posXTouchEnd = 0, posYTouchEnd = 0;
var posXVariation = 0, posYVariation = 0;
var numAbsoluteValueX = 0, numAbsoluteValueY = 0;

var intXTouchStart=0;
var intSumDistance=0;

var numMoveCount=5;
var intDirectionWeight=0;

var item_width, item_height, interval_count, target_group, decrease, increase, interval_id=0, interval_count = 0;
item_width = "100%"; item_height = 40;


this.item_expand = function(obj, e)
{
	trace(obj.id);
	
	target_group = obj.parent.parent;
	//target_group = obj;
	//target_group.parent;
	
	expanded_group = this._expanded_group;
	decrease = expanded_group ? expanded_group._item_count*item_height / 10 : 0;
	increase = target_group._item_count*item_height / 10;
	this.setTimer(interval_id, 10);	

/*
	trace("[donudory] target_group="+ target_group);
	trace("[donudory] target_group.parent="+ target_group.parent);
	trace("[donudory] target_group._item_count="+ target_group._item_count);
	*/

/*
	trace("[donudory] item_height="+ item_height);


	trace("[donudory] expanded_group="+ expanded_group);
	trace("[donudory] expanded_group._item_count="+ expanded_group._item_count);

	trace("[donudory] decrease="+ decrease);
	trace("[donudory] increase="+ increase);
	
	trace("[donudory] interval_id="+ interval_id);
*/		
};

this.item_click = function(obj, e)
{
	trace(obj.id);
	
	this.parent.parent.parent.parent.showSample(obj.id);
};

this.menu_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
//	item_width = this.getOffsetWidth();	
	
	var i, j, target_fn, menu_nm, menu_item, menu_group, group_count = 0, item_count = 0, ds = g_varAppInfo.ds_sample_list;
	var varBgColor, varFont;
	
	for(i = 0, count = ds.getRowCount(); i < count; i++)
	{
		if(ds.getColumn(i, 'tree_level') < 1)
		{
			item_count = 0;
			menu_group = new Div();
			menu_group.init('group'+group_count, 0, item_height*group_count, item_width, item_height);			
					
			menu_group.form.set_scrolltype("none");
			menu_group.form.set_scrollbartype("none");
			
			menu_group._index = group_count++;
			this.addChild(menu_group.name, menu_group);
		}
		
		menu_item = new Button();
		menu_nm = ds.getColumn(i, 'subject');
		menu_item.init(menu_nm, 0, item_height*item_count, item_width, item_height);

		if(item_count == 0)
		{
			target_fn = this.item_expand;
			varBgColor = "#F2F2F2";
			varFont = "bold 16px Verdana";
			//menu_item.style.set_image('theme://images/img_grip.png');
			//menu_item.style.set_imagealign("left middle");
		}
		else
		{
			target_fn = this.item_click;
			varBgColor = "#CEE4F9";
			varFont = "16px Verdana";			
		}
		
		menu_item.set_background(varBgColor);
		menu_item.set_border("0px none");
		menu_item.set_color("#000000");
		menu_item.set_borderRadius("normal 0 0");
		menu_item.set_font(varFont);
		menu_item.set_wordWrap("english");
		menu_item.set_textAlign("left");		
		menu_item.set_text(" "+ menu_nm);		


		menu_item.addEventHandler("onclick", target_fn, this);
		menu_group._item_count = item_count++;
		menu_group.addChild(menu_item.name, menu_item);
		/*
		trace("[donudory] menu_nm = " + menu_nm);
		trace("[donudory] menu_group.name=" + menu_group.name);
		trace("[donudory] menu_group._item_count=" + menu_group._item_count);
		*/
		
	}
	
	for(j = 0; j < group_count; j++)
	{
		this['group'+j].show();
	}
	
	this._group_count = group_count;
	this._expanded_group = null;
	//this.div_main.form.scrollbartype("none");
	//this.set_scrollbars("none");
}

this.menu_ontimer = function(obj:nexacro.Form,e:nexacro.TimerEventInfo)
{
	//trace("[donudory] menu_ontimer()");
	
	var i, tmp_g, gap = 0, expanded_group = this._expanded_group;
	/*
	trace("[donudory] expanded_group="+ expanded_group);	
	trace("[donudory] target_group=" + target_group);	
	*/

	
	if(expanded_group == target_group)
	{
	/*
		trace("[donudory] if(expanded_group == target_group)");
		trace("[donudory] expanded_group.id="+expanded_group.id);
		*/
		expanded_group.set_height(expanded_group.height-decrease);
		
		for(i = expanded_group._index, gcount = this._group_count; i < gcount; i++)
		{
			gap = 0, tmp_g = this['group'+i];
			//trace("[donudory] tmp_g="+ tmp_g);
			
			if(expanded_group && tmp_g._index > expanded_group._index)
			{
				gap -= decrease;
			}
			
			tmp_g.set_top(tmp_g.top + gap);
		}
	}
	else
	{
		//trace("[donudory] if(expanded_group == target_group) else");
		expanded_group && expanded_group.set_height(expanded_group.height-decrease);
		
		for(i = 0, gcount = this._group_count; i < gcount; i++)
		{
			gap = 0, tmp_g = this['group'+i];
			/*
			trace("[donudory] tmp_g="+ tmp_g);
			trace("[donudory] tmp_g._index="+tmp_g._index);
			trace("[donudory] target_group._index="+target_group._index);
			*/
			/*
			trace("[donudory] tmp_g="+ tmp_g);
			trace("[donudory] expanded_group="+expanded_group);
			trace("[donudory] tmp_g._index="+tmp_g._index);
			trace("[donudory] expanded_group && tmp_g._index=" + expanded_group && tmp_g._index);
			trace("[donudory] expanded_group._index="+ expanded_group._index);
			*/
			if(expanded_group !== null)
			{
				if((expanded_group && tmp_g._index) > expanded_group._index)
				{
					gap -= decrease;
					//trace("[donudory] gap(decrease)="+gap);
				}
			}
			
			if(tmp_g._index > target_group._index)
			{
				gap += increase;
				//trace("[donudory] gap(increase)="+gap);
			}
			
			tmp_g.set_top(tmp_g.top + gap);
		}
		
		//target_group.form.set_height(target_group.form.height+increase);			
		target_group.set_height(target_group.height+increase);			
	}
	
	if(++interval_count > 9)
	{		
		this.killTimer(interval_id);
		interval_count = 0;
		this._expanded_group = (expanded_group == target_group ? null : target_group);
	}
	/*
	trace("[donudory] this._group_count="+ this._group_count);
	
	trace("[donudory] expanded_group="+ expanded_group);
	trace("[donudory] this._expanded_group=" + this._expanded_group);
	
	trace("[donudory] target_group=" + target_group);	
	*/
	this.resetScroll();
	
}

this.menu_ontouchstart = function(obj:nexacro.Form,e:nexacro.TouchEventInfo)
{
	intXTouchStart = e.touchinputinfos[0].clientx;
	
	trace("[donudory] menu_ontouchstart()");
	trace("[donudory] intXTouchStart = "+ intXTouchStart);

	posXTouchStart = e.touchinputinfos[0].clientx;
	posYTouchStart = e.touchinputinfos[0].clienty;

};

this.menu_ontouchmove = function(obj:nexacro.Form,e:nexacro.TouchEventInfo)
{
		trace("[donudory] menu_ontouchmove()");
		
		//var posCurX = e.touchinputinfos[0].clientx;
		//var posCurY = e.touchinputinfos[0].clienty;
		if(numMoveCount)
		{
		
			posXTouchEnd = e.touchinputinfos[0].clientx;
			posYTouchEnd = e.touchinputinfos[0].clienty;

			posXVariation = posXTouchEnd - posXTouchStart;
			posYVariation = posYTouchEnd - posYTouchStart;		
			
			//if(posXVariation <= 0) return;

			numAbsoluteValueX = Math.abs(posXVariation);
			numAbsoluteValueY = Math.abs(posYVariation);
		
			slope = numAbsoluteValueY / numAbsoluteValueX;
			
			trace("[donudory slope] slope = "+ slope);
			trace("[donudory slope] numAbsoluteValueX = "+ numAbsoluteValueX);
			trace("[donudory slope] numAbsoluteValueY = "+ numAbsoluteValueY);		
			trace("[donudory slope] posXVariation = "+ posXVariation);
			trace("[donudory slope] posYVariation = "+ posYVariation);
			
			if(numAbsoluteValueX >= numAbsoluteValueY)
			{
				intDirectionWeight++;
			}
			else
			{
				intDirectionWeight--;
			}
			
			numMoveCount--;
		}
		else
		{
		

	if(intDirectionWeight >= 0)
	{
	
		var intXDistance = e.touchinputinfos[0].clientx - intXTouchStart;	
		intSumDistance = intSumDistance + intXDistance;

		//this.parent.parent.parent.parent.div_menu.form.div_samplelist.set_scrolltype("none");
		//this.set_dragscrolltype("none");
		this.parent.parent.parent.parent.set_dragscrolltype("none");
		this.set_dragscrolltype("none");
		this.parent.parent.parent.parent.fn_menu_move(intXDistance);

		trace("[donudory] intXTouchStart = "+ intXTouchStart);
		trace("[donudory] e.touchinputinfos[0].clientx = "+ e.touchinputinfos[0].clientx);
		trace("[donudory] intXDistance = "+ intXDistance);
	}

		}//end of else
};

this.menu_ontouchend = function(obj:nexacro.Form,e:nexacro.TouchEventInfo)
{
	
	//var intXDistance = e.touchinputinfos[0].clientx - intXTouchStart;
	
	trace("[donudory] menu_ontouchend()");
	trace("[donudory] e.touchinputinfos[0].clientx = "+ e.touchinputinfos[0].clientx);
	trace("[donudory] intXTouchStart = "+ intXTouchStart);
	trace("[donudory] intSumDistance = "+ intSumDistance);
		
	if(intSumDistance > 160)
	{
		this.parent.parent.parent.parent.fn_menu_onoff(0, intSumDistance);
	}
	else
	{	
		this.parent.parent.parent.parent.fn_menu_onoff(1, intSumDistance);
	}

	intSumDistance = 0;
	
	numMoveCount = 5;
	intDirectionWeight = 0;
	
	this.parent.parent.parent.parent.set_dragscrolltype("vert");
	this.set_dragscrolltype("vert");
	//this.parent.parent.parent.parent.div_menu.form.div_samplelist.set_scrolltype("vertical");
/*
	if(e.touchinputinfos[0].type == "2")
	{
		posXTouchEnd = e.touchinputinfos[0].clientx;
		posYTouchEnd = e.touchinputinfos[0].clienty;

		posXVariation = posXTouchEnd - posXTouchStart;
		posYVariation = posYTouchEnd - posYTouchStart;		
		
		if(posXVariation <= 0) return;

		numAbsoluteValueX = Math.abs(posXVariation);
		numAbsoluteValueY = Math.abs(posYVariation);
	
		//slope = numAbsoluteValueY / numAbsoluteValueX
		if( (numAbsoluteValueY / numAbsoluteValueX) < 1)
		{
			this.parent.parent.parent.parent.fn_menu_onoff(0);
		}
	
	}
*/

};]]></Script>
  </Form>
</FDL>
